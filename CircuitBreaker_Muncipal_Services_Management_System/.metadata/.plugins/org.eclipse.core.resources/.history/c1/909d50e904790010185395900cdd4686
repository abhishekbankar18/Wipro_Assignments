package com.example.employee_service.service;


import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.employee_service.model.Employee;
import com.example.employee_service.repository.EmployeeRepository;

@Service
public class EmployeeService {

    private final EmployeeRepository employeeRepository;
    //private final DepartmentRepository departmentRepository;

    public EmployeeService(EmployeeRepository employeeRepository, DepartmentRepository departmentRepository) {
        this.employeeRepository = employeeRepository;
        //this.departmentRepository = departmentRepository;
    }

    public Employee createEmployee(Employee employee, Long departmentId) {
        //Optional<Department> department = departmentRepository.findById(departmentId);
        //department.ifPresent(employee::setDepartment);
        return employeeRepository.save(employee);
    }

    public List<Employee> getAllEmployees() {
        return employeeRepository.findAll();
    }

    public Optional<Employee> getEmployeeById(Long id) {
        return employeeRepository.findById(id);
    }

    public Employee updateEmployee(Long id, Employee updatedEmployee, Long departmentId) {
        return employeeRepository.findById(id).map(emp -> {
            emp.setName(updatedEmployee.getName());
            emp.setEmail(updatedEmployee.getEmail());
            emp.setPhoneNumber(updatedEmployee.getPhoneNumber());
          //  departmentRepository.findById(departmentId).ifPresent(emp::setDepartment);
            return employeeRepository.save(emp);
        }).orElseThrow(() -> new RuntimeException("Employee not found"));
    }

    public void deleteEmployee(Long id) {
        employeeRepository.deleteById(id);
    }
}
