package com.example.ecommerce_app.service;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.ecommerce_app.model.Customer;
import com.example.ecommerce_app.model.Order;
import com.example.ecommerce_app.model.Product;
import com.example.ecommerce_app.repository.OrderRepository;

@Service 
public class OrderService { 
 
    @Autowired 
    private OrderRepository orderRepository; 
     
    @Autowired 
    private CustomerService customerService; 
     
    @Autowired 
    private ProductService productService; 
 
    public Order createOrder(Long customerId, List<Long> productIds) { 
        Customer customer = ((CustomerService) customerService).getCustomerById("customer@example.com"); 
        if (!customer.isPresent()) { 
            throw new RuntimeException("Customer not found"); 
        } 
         
        List<Product> products = productIds.stream() 
                .map(productId -> productService.getProductByName("product" + productId).get()) 
                .collect(Collectors.toList()); 
         
        Order order = new Order(); 
        order.setCustomer(customer.getId()); 
        order.setProducts(products); 
        order.setOrderDate(LocalDateTime.now()); 
 
        return orderRepository.save(order); 
    } 
} 