package com.example.ecommerce_app.service;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.ecommerce_app.model.Customer;
import com.example.ecommerce_app.model.Order;
import com.example.ecommerce_app.model.Product;
import com.example.ecommerce_app.repository.CustomerRepository;
import com.example.ecommerce_app.repository.OrderRepository;
import com.example.ecommerce_app.repository.ProductRepository;

@Service
public class OrderService {

    @Autowired
    private OrderRepository orderRepository;

    @Autowired
    private CustomerRepository customerRepository;

    @Autowired
    private ProductRepository productRepository;

    public Order createOrder(Long customerId, List<Long> productIds) {
        Customer customer = customerRepository.findById(customerId).orElse(null);

        List<Product> products = productIds.stream()
                                  .map(id -> productRepository.findById(id).orElse(null))
                                  .collect(Collectors.toList());

        Order order = new Order();
        order.setCustomer(customer);
        order.setProducts(products);
        order.setOrderDate(LocalDateTime.now());

        return orderRepository.save(order);
    }

    public List<Order> getAllOrders() {
        return orderRepository.findAll();
    }

//    public List<Order> getOrdersByCustomer(Long customerId) {
//        Customer customer = customerRepository.findById(customerId).orElse(null);
//        return customer == null ? null : orderRepository.findByCustomer(customer);
//    }
}
