package com.example.movie_ticket_booking_app_rest_api.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

@SpringBootTest
@AutoConfigureMockMvc(addFilters = false)
class AppControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @Test
    void testCreateMovie() throws Exception {
        // Arrange
        String movieJson = "{\n" +
                "  \"title\": \"Inception\",\n" +
                "  \"genre\": \"Sci-Fi\"\n" +
                "}";

        // Action
        ResultActions result = mockMvc.perform(
                MockMvcRequestBuilders.post("/api/movies")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content(movieJson)
        );


        // Assert
        result.andExpect(status().isCreated())
                .andExpect(MockMvcResultMatchers.jsonPath("$.title").value("Inception"))
                .andExpect(MockMvcResultMatchers.jsonPath("$.genre").value("Sci-Fi"));
    }
}
